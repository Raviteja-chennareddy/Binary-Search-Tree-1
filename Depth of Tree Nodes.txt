#include <iostream>
#include <vector>
using namespace std;

struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};

class BST {
private:
    TreeNode* root;

    TreeNode* insert(TreeNode* node, int val, int depth) {
        if (node == nullptr) {
            cout << depth << " ";
            return new TreeNode(val);
        }
        if (val < node->val) {
            node->left = insert(node->left, val, depth + 1);
        } else {
            node->right = insert(node->right, val, depth + 1);
        }
        return node;
    }

public:
    BST() : root(nullptr) {}

    void insert(int val) {
        root = insert(root, val, 0);
    }
};

int main() {
    int T;
    cin >> T;

    for (int t = 0; t < T; ++t) {
        int N;
        cin >> N;

        BST bst;
        for (int i = 0; i < N; ++i) {
            int value;
            cin >> value;
            bst.insert(value);
        }
        cout << endl;
    }

    return 0;
}
